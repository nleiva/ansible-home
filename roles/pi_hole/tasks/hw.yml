- name: Creating Pi-hole configuration folder
  ansible.builtin.file:
    path: /etc/pihole
    state: directory
    recurse: true
    mode: 0755

- name: Create Pi-hole configuration
  ansible.builtin.template:
    src: setupVars.conf.j2
    dest: /etc/pihole/setupVars.conf
    mode: 0644
    force: true
  vars:
    - pihole_password: "{{ lookup('env', 'PIHOLE_PASSWORD') | default('113459eb7bb31bddee85ade5230d6ad5d8b2fb52879e00a84ff6ae1067a210d3', true) }}"

- name: Create Pi-hole local DNS records
  ansible.builtin.template:
    src: custom.list.j2
    dest: /etc/pihole/custom.list
    mode: 0644
    force: false

- name: Create directory for ansible custom facts
  ansible.builtin.file:
    state: directory
    recurse: true
    path: /etc/ansible/facts.d
    mode: 0755

- name: Ensure ansible custom facts file exists
  ansible.builtin.copy:
    content: "[main]"
    dest: /etc/ansible/facts.d/app.fact
    force: false
    mode: 0644

- name: Add dns to custom installed apps
  ansible.builtin.lineinfile:
    path: /etc/ansible/facts.d/app.fact
    regexp: '^dns='
    line: 'dns=true'
    state: present
    mode: '0644'

- name: Re-read facts after adding custom fact
  ansible.builtin.setup:
    filter: ansible_local

- name: Download Pi-hole installer
  ansible.builtin.get_url:
    url: https://install.pi-hole.net
    dest: ~/install-pihole.sh
    mode: 0740

- name: Install Pi-hole
  ansible.builtin.command: ~/install-pihole.sh --unattended
  register: pihole_output
  until: pihole_output is not failed
  retries: 1
  delay: 5

- name: Clone whitelist repo
  ansible.builtin.git:
    repo: https://github.com/anudeepND/whitelist.git
    dest: /tmp/whitelist
    force: true
  tags: whitelist

- name: Add commonly white listed websites
  ansible.builtin.command: python3 /tmp/whitelist/scripts/whitelist.py
  tags: whitelist
